version: '3'

services:
    postgresql:
      container_name: ecom_pg_sql
      image: postgres
      environment:
        POSTGRES_USER: nshrestha
        POSTGRES_PASSWORD: password
        PGDATA: /data/postgres
      volumes:
        - postgres:/data/postgres
      ports:
        - "5432:5432"
      networks:
        - microservices-net


    pgadmin:
      container_name: ecom_ms_pgadmin
      image: dpage/pgadmin4
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
        PGADMIN_CONFIG_SERVER_MODE: 'False'
      volumes:
        - pgadmin:/var/lib/pgadmin
      ports:
        - "5050:80"
      networks:
        - microservices-net
      restart: unless-stopped

    zipkin:
      container_name: zipkin
      image: openzipkin/zipkin
      ports:
        - "9411:9411"
      networks:
        - microservices-net

    mongodb:
      container_name: mongo_db
      image: mongo
      ports:
        - "27017:27017"
      volumes:
        - mongo:/data
      environment:
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=admin
      networks:
        - microservices-net

    mongo-express:
      image: mongo-express
      container_name: mongo_express
      restart: always
      ports:
        - 8081:8081
      environment:
        - ME_CONFIG_MONGODB_SERVER=mongodb
        - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
        - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
        - ME_CONFIG_BASICAUTH_USERNAME=user  # (Optional) HTTP login for Mongo Express
        - ME_CONFIG_BASICAUTH_PASSWORD=password
      networks:
        - microservices-net

    zookeeper:
      image: confluentinc/cp-zookeeper:6.2.12
      hostname: zookeeper
      container_name: zookeeper
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      networks:
        - microservices-net

    broker:
      image: confluentinc/cp-kafka:6.2.12
      hostname: broker
      container_name: broker
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
        - "9101:9101"  # JMX
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_JMX_PORT: 9101
        KAFKA_JMX_HOSTNAME: localhost
      networks:
        - microservices-net

    mail-dev:
      container_name: ms-mail-dev
      image: maildev/maildev
      ports:
        - "1080:1080"
        - "1025:1025"
      networks:
        - microservices-net

networks:
   microservices-net:
      driver: bridge

volumes:
   postgres:
   pgadmin:
   mongo: